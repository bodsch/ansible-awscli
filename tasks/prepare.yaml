---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- block:
    - name: make sure python3-apt is installed (only debian based)
      package:
        name:
          - python3-apt
        state: present
      register: _installed

    - name: clean apt cache
      command: apt-get clean
      args:
        warn: false
      when:
        - _installed.changed

    - name: update package cache
      package:
        update_cache: true
      when:
        - _installed.changed
  when:
    - ansible_os_family | lower == 'debian'

- name: detect if awscli {{ awscli_version }} is already installed
  stat:
    path: "/usr/local/bin/aws_{{ awscli_version }}"
  register: awscli_versioned_installed

- name: detect installed aws-cli version
  awscli_version:
  register: awscli_installed_version
  check_mode: false
  ignore_errors: true

- name: create local tmp directory
  become: false
  delegate_to: 127.0.0.1
  file:
    path: "{{ awscli_local_tmp_directory }}"
    state: directory
    mode: "0750"
  when:
    - awscli_versioned_installed is defined
    - not awscli_versioned_installed.stat.exists

- name: define uninstall awscli
  set_fact:
    awscli_uninstall: "{{ awscli_installed_version.version.major is version_compare(awscli_version.split('.') | first, '<') }}"
  when:
    - awscli_installed_version is defined
    - awscli_installed_version.version is defined
    - awscli_installed_version.version.major is defined

- name: define uninstall awscli
  set_fact:
    awscli_reinstall: "{{ awscli_installed_version.full_version is version_compare(awscli_version, '!=') }}"
  when:
    - awscli_installed_version is defined
    - awscli_installed_version.version is defined
    - awscli_installed_version.version.major is defined

- name: update package cache
  package:
    update_cache: true

- name: install dependencies
  package:
    name: "{{ awscli_dependencies }}"
    state: present

- name: python support
  block:
    - name: create requirements.txt
      template:
        src: requirements.txt.j2
        dest: /tmp/awscli-requirements.txt
        mode: "0660"

    - name: ensure python dependecies for awscli are installed
      pip:
        requirements: /tmp/awscli-requirements.txt
        state: present
        executable: pip{{ '3' if ansible_python.version.major | int == 3 else '' }}
      register: pip_install
      # ignore_errors: true
      # no_log: true

  when:
    - awscli_python_packages is defined
    - awscli_python_packages | count > 0

...
