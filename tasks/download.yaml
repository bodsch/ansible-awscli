---

- name: get latest tags
  when:
    - awscli_version == "latest"
  become: false
  delegate_to: localhost
  run_once: true
  block:
    - name: get latest release
      delegate_to: localhost
      become: false
      run_once: true
      bodsch.scm.github_latest:
        project: aws
        repository: aws-cli
        github_tags: true
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      register: _latest_release

    - name: re-define awscli_version
      ansible.builtin.set_fact:
        awscli_version: "{{ _latest_release.latest_release }}"

- name: define delegate instance for download handling
  ansible.builtin.set_fact:
    awscli_delegate_to: "{{ ansible_host }}"
    awscli_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/awscli', true) }}/{{ awscli_version }}"
  when:
    - awscli_direct_download

- name: create download directory
  become: false
  delegate_to: "{{ awscli_delegate_to }}"
  ansible.builtin.file:
    path: "{{ awscli_local_tmp_directory }}"
    state: directory
    mode: "0750"
  when:
    - awscli_versioned_installed is defined
    - not awscli_versioned_installed.stat.exists

- name: download awscli archiv to local folder
  become: false
  delegate_to: "{{ awscli_delegate_to }}"
  ansible.builtin.get_url:
    url: "{{ awscli_download_url }}"
    dest: "{{ awscli_local_tmp_directory }}/{{ awscli_archiv }}"
    mode: 0640
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  check_mode: false

- name: propagate awscli
  ansible.builtin.copy:
    src: "{{ awscli_local_tmp_directory }}/{{ awscli_archiv }}"
    dest: "/tmp/{{ awscli_archiv }}"
    mode: 0750
    owner: root
    group: root
    remote_src: "{{ 'true' if awscli_direct_download else 'false' }}"

...
